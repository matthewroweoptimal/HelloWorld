#ifndef __OLY_MT_ENUMS_H__
#define __OLY_MT_ENUMS_H__

typedef enum {
	TEST_CMD_SET_STATIC_IP = 0x01,
	TEST_CMD_SET_STATIC_ALL = 0x02,
	TEST_CMD_SET_IDENTITY = 0x03,
	TEST_CMD_GET_MAC_ADDR = 0x04,
	TEST_CMD_GET_STATIC_ALL = 0x05,
	TEST_CMD_SET_MODEL = 0x06,
	TEST_CMD_SET_SERIAL_NUMBER = 0x07,
	TEST_CMD_GET_SERIAL_NUMBER = 0x08,
	TEST_CMD_RESTORE_DEFAULTS = 0x09,
	TEST_CMD_GET_STATUS_ALL = 0x0A,
	TEST_CMD_PRINT_MESSAGE = 0x0B,
	/* Manufacturing Test */
	TEST_CMD_SET_INPUT,
	TEST_CMD_SET_OUTPUT,
	TEST_CMD_SET_FUNC_GEN,
	TEST_CMD_GET_RMS_METER_LEVEL,
	TEST_CMD_GET_RMS_METER_RANGE,
	TEST_CMD_WRITE_IO,
	TEST_CMD_READ_IO,
	TEST_CMD_READ_AMP_TEMPERATURE,
	TEST_CMD_VALIDATE_SPI_FLASH,
	TEST_CMD_GET_IMON_VALUE,
	TEST_DSP_ERROR = 0x30,
	TEST_CMD_FENCE,
} oly_test_command;

typedef enum {
	DSP_ERROR_INVALID_FLOAT		= 0x0001
} DSP_ERROR_ID;							// add more sub ids here

typedef enum {
	TEST_INPUT_ANALOG = 0x00,
	TEST_INPUT_DANTE,
	TEST_INPUT_PINK,
	TEST_INPUT_SINE,
} test_audio_input;

typedef enum {
	OLYTESTPIN_I_AMP1_CH1_CLIP = 0x00,
	OLYTESTPIN_I_AMP1_CH2_CLIP,
	OLYTESTPIN_I_AMP1_PROTECT,
	OLYTESTPIN_I_AMP2_CH1_CLIP,
	OLYTESTPIN_I_AMP2_CH2_CLIP,
	OLYTESTPIN_I_AMP2_PROTECT,
	OLYTESTPIN_I_IR_A_RX,
	OLYTESTPIN_I_IR_B_RX,
	OLYTESTPIN_I_DISPLAY_D0,
	OLYTESTPIN_I_DISPLAY_D1,
	OLYTESTPIN_I_FENCE,
} test_pin_input;

typedef enum {
	OLYTESTPIN_O_AMP1_DISABLE_MUTE = 0x00,
	OLYTESTPIN_O_AMP1_BTL4R,
	OLYTESTPIN_O_AMP1_TEMP_VAC_SEL_CONTROL,
	OLYTESTPIN_O_AMP1_STANDBY,
	OLYTESTPIN_O_AMP2_DISABLE_MUTE,
	OLYTESTPIN_O_AMP2_BTL4R,
	OLYTESTPIN_O_AMP2_TEMP_VAC_SEL_CONTROL,
	OLYTESTPIN_O_AMP2_STANDBY,
	OLYTESTPIN_O_IR_A_TX,
	OLYTESTPIN_O_IR_B_TX,
	OLYTESTPIN_O_DISPLAY_D2,
	OLYTESTPIN_O_DISPLAY_D3,
	OLYTESTPIN_O_DISPLAY_D4,
	OLYTESTPIN_O_DISPLAY_D5,
	OLYTESTPIN_O_DISPLAY_D6,
	OLYTESTPIN_O_FAN_CONTROL,
	OLYTESTPIN_O_LOGO_LED_AMBER,
	OLYTESTPIN_O_LOGO_LED_GREEN,
	OLYTESTPIN_O_LOGO_LED_RED,
	OLYTESTPIN_O_FENCE,
} test_pin_output;

#endif