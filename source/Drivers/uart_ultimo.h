/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : uart_ultimo.h
**     Project     : oly_host_application
**     Processor   : MK64FN1M0VMD12
**     Component   : fsl_uart
**     Version     : Component 1.2.0, Driver 01.00, CPU db: 3.00.000
**     Repository  : KSDK 1.2.0
**     Compiler    : GNU C Compiler
**     Date/Time   : 2015-08-03, 13:51, # CodeGen: 123
**     Abstract    :
**
**     Contents    :
**         UART_DRV_Init                - uart_status_t UART_DRV_Init(uint32_t instance,uart_state_t *...
**         UART_DRV_Deinit              - uart_status_t UART_DRV_Deinit(uint32_t instance);
**         UART_DRV_InstallRxCallback   - uart_rx_callback_t UART_DRV_InstallRxCallback(uint32_t...
**         UART_DRV_InstallTxCallback   - uart_tx_callback_t UART_DRV_InstallTxCallback(uint32_t...
**         UART_DRV_SendDataBlocking    - uart_status_t UART_DRV_SendDataBlocking(uint32_t instance,const uint8_t *...
**         UART_DRV_SendData            - uart_status_t UART_DRV_SendData(uint32_t instance,const uint8_t *...
**         UART_DRV_GetTransmitStatus   - uart_status_t UART_DRV_GetTransmitStatus(uint32_t instance,uint32_t *...
**         UART_DRV_AbortSendingData    - uart_status_t UART_DRV_AbortSendingData(uint32_t instance);
**         UART_DRV_ReceiveDataBlocking - uart_status_t UART_DRV_ReceiveDataBlocking(uint32_t instance,uint8_t *...
**         UART_DRV_ReceiveData         - uart_status_t UART_DRV_ReceiveData(uint32_t instance,uint8_t *...
**         UART_DRV_GetReceiveStatus    - uart_status_t UART_DRV_GetReceiveStatus(uint32_t instance,uint32_t *...
**         UART_DRV_AbortReceivingData  - uart_status_t UART_DRV_AbortReceivingData(uint32_t instance);
**
**     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file uart_ultimo.h
** @version 01.00
** @brief
**
*/         
/*!
**  @addtogroup uart_ultimo_module uart_ultimo module documentation
**  @{
*/         
#ifndef __uart_ultimo_H
#define __uart_ultimo_H
/* MODULE uart_ultimo. */
#include <stdio.h>
#include <stdbool.h>
#include "M480.h"


#define NU_UART_ULTIMO	1
#define ULT_RX_BUF_SIZE 1024

/*! Device instance number */
#define FSL_UART_ULTIMO UART3_IDX
  
#ifdef ULTIMO_UART_EDMA

// Store runtime state structure for the eDMA driver
extern edma_state_t						uart_ultimo_State;
// Store runtime state structure for UART driver with EDMA
extern uart_edma_state_t				uart_ultimo_EdmaState;
/*! @brief UART configuration declaration */
extern const uart_edma_user_config_t 	uart_ultimo_Config;
extern const edma_user_config_t			uart_ultimo_EdmaConfig;

#else	//	ULTIMO_UART_EDMA

/*! Driver state structure without DMA */
//extern uart_state_t uart_ultimo_State;
/*! @brief UART configuration declaration */

//extern uint8_t uart_ultimo_rx_byte;

#endif	//	ULTIMO_UART_EDMA

/*! Interrupt service routine (ISR) prototype & init function */
void ULTIMO_UART_IRQHandler();
void ULTIMO_UART_Init();

  
    
#endif
/* ifndef __uart_ultimo_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
